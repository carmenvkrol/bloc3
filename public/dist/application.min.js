"use strict";ApplicationConfiguration.registerModule("articles"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("tags",{url:"/tags",templateUrl:"modules/articles/views/tags.client.view.html"}).state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$http","$scope","$stateParams","$location","$timeout","$resource","Authentication","Articles",function($http,$scope,$stateParams,$location,$timeout,$resource,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,link:this.link,content:this.content,tags:this.tags});article.$save(function(){$location.path("articles"),$scope.title="",$scope.link="",$scope.content="",$scope.tags="",$scope.find()},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1);$scope.find()}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})},$scope.findTags=function(){var rawTags={};$http.get("/article_tags").success(function(data){rawTags=data,console.log(rawTags);for(var prop in rawTags)$scope.tags.push(prop)}).error(function(){}),$scope.tags=[]},$scope.selection=[],$scope.toggleSelection=function(tag){var idx=$scope.selection.indexOf(tag);idx>-1?$scope.selection.splice(idx,1):$scope.selection.push(tag)};$resource("/article_tags")}]),angular.module("articles").controller("TagsController",["$http","$scope","$stateParams","$location","$timeout","$resource","$q","Authentication","Articles",function($http,$scope){$scope.articles=[],$scope.tags={},$scope.findTags=function(){$http.get("/article_tags").success(function(data){console.log(data),$scope.tags=data}).error(function(){})},$scope.getArticles=function(){return $http.get("/articles").success(function(data){$scope.articles=data}).error(function(){console.log("error in getArticles")})},$scope.updateTag=function(theTag){$http.post("/article_tags",theTag).success(function(data){$scope.tags=data}).error(function(){})},$scope.deleteTag=function(theTag){$http.delete("/article_tags/"+theTag).success(function(data){$scope.tags=data}).error(function(){})},$scope.showMessage=function(message){return $scope.message=message,!0}}]),angular.module("articles").filter("articlesByTag",["_",function(_){return function(articles,selectedTags){var filtered=[];if(0===selectedTags.length)return articles;var tags,intersect;return angular.forEach(articles,function(article){tags=article.tags.map(function(tag){return tag.text}),intersect=_.intersection(tags,selectedTags),intersect.length===selectedTags.length&&filtered.push(article)}),filtered}}]),angular.module("articles").filter("searchArticle",[function(){return function(items,searchText){var filtered=[];return void 0===searchText?items:(angular.forEach(items,function(item){item.title.indexOf(searchText)>=0&&filtered.push(item)}),filtered)}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("articles").factory("_",["$window",function($window){return $window._}]),describe("Filter: articlesByTag",function(){beforeEach(module(ApplicationConfiguration.applicationModuleName));var articlesByTagFilter;beforeEach(inject(function($filter){articlesByTagFilter=$filter("articlesByTag")})),it("articleByTag filter should return tags if selectedTags length is more than zero",function(){expect(articlesByTagFilter([{tags:[{text:"tag-3"}]}],["tag-3"])).toEqual([{tags:[{text:"tag-3"}]}])}),it("articleByTag filter should return articles if selectedTags.length is 0",function(){expect(articlesByTagFilter([{tags:[{text:"tag-3"}]}],[])).toEqual([{tags:[{text:"tag-3"}]}])})}),function(){describe("ArticlesController",function(){var ArticlesController,scope,$httpBackend,$stateParams,$location;beforeEach(function(){jasmine.addMatchers({toEqualData:function(){return{compare:function(actual,expected){return{pass:angular.equals(actual,expected)}}}}})}),beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function($controller,$rootScope,_$location_,_$stateParams_,_$httpBackend_){scope=$rootScope.$new(),$stateParams=_$stateParams_,$httpBackend=_$httpBackend_,$location=_$location_,ArticlesController=$controller("ArticlesController",{$scope:scope})})),it("$scope.create() with valid form data should send a POST request with the form input values and then locate to new object URL",inject(function(Articles){var sampleArticlePostData=new Articles({title:"An Article about MEAN",link:"http://www.google.com",content:"MEAN rocks!",tags:[{text:"tag-3"}]}),sampleArticleResponse=new Articles({_id:"525cf20451979dea2c000001",title:"An Article about MEAN",link:"http://www.google.com",content:"MEAN rocks!",tags:[{text:"tag-3"}]});scope.title="An Article about MEAN",scope.link="http://www.google.com",scope.content="MEAN rocks!",scope.tags=[{text:"tag-3"}],$httpBackend.expectPOST("articles",sampleArticlePostData).respond(sampleArticleResponse);var sampleArticles=[sampleArticleResponse];$httpBackend.expectGET("articles").respond(sampleArticles),scope.create(),$httpBackend.flush(),expect(scope.title).toEqual(""),expect(scope.link).toEqual(""),expect(scope.content).toEqual(""),expect(scope.tags).toEqual(""),expect($location.path()).toBe("/articles")})),it("$scope.remove() should send a DELETE request with a valid articleId and remove the article from the scope",inject(function(Articles){var sampleArticle=new Articles({_id:"525a8422f6d0f87f0e407a33"});scope.articles=[sampleArticle],$httpBackend.expectDELETE(/articles\/([0-9a-fA-F]{24})$/).respond(204);var sampleArticles=0;$httpBackend.expectGET("articles").respond(sampleArticles),scope.remove(sampleArticle),$httpBackend.flush(),expect(scope.articles.length).toBe(0)})),it("$scope.update() should update a valid article",inject(function(Articles){var sampleArticlePutData=new Articles({_id:"525cf20451979dea2c000001",title:"An Article about MEAN",link:"http://www.google.com",content:"MEAN Rocks!",tags:[{text:"tag-3"}]});scope.article=sampleArticlePutData,$httpBackend.expectPUT(/articles\/([0-9a-fA-F]{24})$/).respond(),scope.update(),$httpBackend.flush(),expect($location.path()).toBe("/articles")})),it("$scope.find() should create an array with at least one article object fetched from XHR",inject(function(Articles){var sampleArticle=new Articles({title:"An Article about MEAN",link:"http://www.google.com",content:"MEAN rocks!",tags:[{text:"tag-3"}]}),sampleArticles=[sampleArticle];$httpBackend.expectGET("articles").respond(sampleArticles),scope.find(),$httpBackend.flush(),expect(scope.articles).toEqualData(sampleArticles)})),it("$scope.findOne() should create an array with one article object fetched from XHR using a articleId URL parameter",inject(function(Articles){var sampleArticle=new Articles({title:"An Article about MEAN",link:"http://www.google.com",content:"MEAN rocks!",tags:[{text:"tag-3"}]});$stateParams.articleId="525a8422f6d0f87f0e407a33",$httpBackend.expectGET(/articles\/([0-9a-fA-F]{24})$/).respond(sampleArticle),scope.findOne(),$httpBackend.flush(),expect(scope.article).toEqualData(sampleArticle)})),it("scope.findTags() should load all tags",function(){var sampleTags={"tag-1":{}};$httpBackend.expectGET("/article_tags").respond(sampleTags),scope.findTags(),$httpBackend.flush(),expect(scope.tags).toEqual(["tag-1"])}),it("$scope.toggleSelection(tag) splices tag if currently selected",function(){scope.selection=["tag"],scope.toggleSelection("tag"),expect(scope.selection).toEqual([])}),it("scope.toggleSelection(tag) pushes tag if newly selected",function(){scope.selection=[],scope.toggleSelection("tag"),expect(scope.selection).toEqual(["tag"])})})}(),describe("lodash",function(){var _,window;beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function($injector,_$window_){_=$injector.get("_"),window=_$window_})),it("lodash service should get lodash window object",function(){expect(_).toEqual(window._)})}),describe("Filter: searchArticle",function(){beforeEach(module(ApplicationConfiguration.applicationModuleName));var searchArticleFilter;beforeEach(inject(function($filter){searchArticleFilter=$filter("searchArticle")})),it("searchArticle filter should return items if searchText is undefined",function(){expect(searchArticleFilter([{_id:"525cf20451979dea2c000001",title:"An Article about MEAN",link:"http://www.google.com",content:"MEAN rocks!",tags:[{text:"tag-3"}]}],void 0)).toEqual([{_id:"525cf20451979dea2c000001",title:"An Article about MEAN",link:"http://www.google.com",content:"MEAN rocks!",tags:[{text:"tag-3"}]}])}),it("searchArticle filter should return articles that contain searchText",function(){expect(searchArticleFilter([{_id:"525cf20451979dea2c000001",title:"An Article about MEAN",link:"http://www.google.com",content:"MEAN rocks!",tags:[{text:"tag-3"}]}],"MEA")).toEqual([{_id:"525cf20451979dea2c000001",title:"An Article about MEAN",link:"http://www.google.com",content:"MEAN rocks!",tags:[{text:"tag-3"}]}])}),it("searchArticle filter should not return articles that do not contain searchText",function(){expect(searchArticleFilter([{_id:"525cf20451979dea2c000001",title:"An Article about MEAN",link:"http://www.google.com",content:"MEAN rocks!",tags:[{text:"tag-3"}]}],"test")).toEqual([])})}),function(){describe("Tags Controller Tests",function(){var TagsController,scope,$httpBackend,$stateParams,$location;beforeEach(function(){jasmine.addMatchers({toEqualData:function(){return{compare:function(actual,expected){return{pass:angular.equals(actual,expected)}}}}})}),beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function($controller,$rootScope,_$location_,_$stateParams_,_$httpBackend_){scope=$rootScope.$new(),$stateParams=_$stateParams_,$httpBackend=_$httpBackend_,$location=_$location_,TagsController=$controller("TagsController",{$scope:scope})})),it("$scope.findTags() should find tags",function(){var sampleTag={"tag-1":{}},sampleTags=[sampleTag];$httpBackend.expectGET("/article_tags").respond(sampleTags),scope.findTags(),$httpBackend.flush(),expect(scope.tags).toEqualData(sampleTags)}),it("$scope.getArticles() should get articles",function(){var sampleArticle={title:"An Article about MEAN",link:"http://www.google.com",content:"MEAN rocks!",tags:[{text:"tag-3"}]},sampleArticles=[sampleArticle];$httpBackend.expectGET("/articles").respond(sampleArticles),scope.getArticles(),$httpBackend.flush(),expect(scope.articles).toEqualData(sampleArticles)}),it("$scope.updateTag(theTag) should update tag",function(){var sampleTagDeleteData={"tag-1":{},"tag-2":{},"tag-3":{}};$httpBackend.expectPOST("/article_tags","tag-3").respond(sampleTagDeleteData),scope.updateTag("tag-3"),$httpBackend.flush(),expect(scope.tags).toEqualData({"tag-1":{},"tag-2":{},"tag-3":{}})}),it("$scope.deleteTag(tag) should delete tag",function(){var sampleTagDeleteData={"tag-1":{},"tag-2":{}};$httpBackend.expectDELETE("/article_tags/tag-3").respond(sampleTagDeleteData),scope.deleteTag("tag-3"),$httpBackend.flush(),expect(scope.tags).toEqualData({"tag-1":{},"tag-2":{}})}),it("$scope.showMessage(message) should set $scope.message to mesasge and return true",function(){scope.showMessage("test"),expect(scope.message).toEqual("test"),expect(scope.showMessage("test")).toBe(!0)})})}(),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("providers",{url:"/providers",templateUrl:"modules/core/views/providers.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),ApplicationConfiguration.registerModule("core"),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),function(){describe("HeaderController",function(){var scope,HeaderController;beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function($controller,$rootScope){scope=$rootScope.$new(),HeaderController=$controller("HeaderController",{$scope:scope})})),it("should expose the authentication service",function(){expect(scope.authentication).toBeTruthy()})})}(),function(){describe("HomeController",function(){var scope,HomeController;beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function($controller,$rootScope){scope=$rootScope.$new(),HomeController=$controller("HomeController",{$scope:scope})})),it("should expose the authentication service",function(){expect(scope.authentication).toBeTruthy()})})}(),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/articles")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/articles")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]),function(){describe("AuthenticationController",function(){var AuthenticationController,scope,$httpBackend,$stateParams,$location;beforeEach(function(){jasmine.addMatchers({toEqualData:function(){return{compare:function(actual,expected){return{pass:angular.equals(actual,expected)}}}}})}),beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function($controller,$rootScope,_$location_,_$stateParams_,_$httpBackend_){scope=$rootScope.$new(),$stateParams=_$stateParams_,$httpBackend=_$httpBackend_,$location=_$location_,AuthenticationController=$controller("AuthenticationController",{$scope:scope})})),it("$scope.signin() should login with a correct user and password",function(){$httpBackend.when("POST","/auth/signin").respond(200,"Fred"),scope.signin(),$httpBackend.flush(),expect(scope.authentication.user).toEqual("Fred"),expect($location.url()).toEqual("/articles")}),it("$scope.signin() should fail to log in with nothing",function(){$httpBackend.expectPOST("/auth/signin").respond(400,{message:"Missing credentials"}),scope.signin(),$httpBackend.flush(),expect(scope.error).toEqual("Missing credentials")}),it("$scope.signin() should fail to log in with wrong credentials",function(){scope.authentication.user="Foo",scope.credentials="Bar",$httpBackend.expectPOST("/auth/signin").respond(400,{message:"Unknown user"}),scope.signin(),$httpBackend.flush(),expect(scope.error).toEqual("Unknown user")}),it("$scope.signup() should register with correct data",function(){scope.authentication.user="Fred",$httpBackend.when("POST","/auth/signup").respond(200,"Fred"),scope.signup(),$httpBackend.flush(),expect(scope.authentication.user).toBe("Fred"),expect(scope.error).toEqual(void 0),expect($location.url()).toBe("/articles")}),it("$scope.signup() should fail to register with duplicate Username",function(){$httpBackend.when("POST","/auth/signup").respond(400,{message:"Username already exists"}),scope.signup(),$httpBackend.flush(),expect(scope.error).toBe("Username already exists")})})}(),ApplicationConfiguration.registerModule("users"),module.exports=function(grunt){var watchFiles={serverViews:["app/views/**/*.*"],serverJS:["gruntfile.js","server.js","config/**/*.js","app/**/*.js"],clientViews:["public/modules/**/views/**/*.html"],clientJS:["public/js/*.js","public/modules/**/*.js"],clientCSS:["public/modules/**/*.css"],mochaTests:["app/tests/**/*.js"]};grunt.initConfig({pkg:grunt.file.readJSON("package.json"),less:{development:{options:{compress:!0,yuicompress:!0,optimization:2},files:{"public/modules/articles/css/articles.css":"public/modules/articles/css/articles.less","public/modules/articles/css/tags.css":"public/modules/articles/css/tags.less","public/modules/core/css/core.css":"public/modules/core/css/core.less","public/modules/users/css/users.css":"public/modules/users/css/users.less"}}},recess:{options:{compile:!0},dist:{files:[{expand:!0,src:"public/modules/**/*.less",dest:"",ext:".css"}]}},watch:{serverViews:{files:watchFiles.serverViews,options:{livereload:!0}},serverJS:{files:watchFiles.serverJS,tasks:["jshint"],options:{livereload:!0}},clientViews:{files:watchFiles.clientViews,options:{livereload:!0}},clientJS:{files:watchFiles.clientJS,tasks:["jshint"],options:{livereload:!0}},styles:{files:["app/styles/{,*/}*.css"],tasks:["newer:less","autoprefixer"]},recess:{files:["public/modules/articles/css/articles.less","public/modules/articles/css/tags.less","public/modules/core/css/core.less","public/modules/users/css/users.less"],tasks:["recess:dist"]},clientCSS:{files:watchFiles.clientCSS,tasks:["csslint"],options:{livereload:!0}}},jshint:{all:{src:watchFiles.clientJS.concat(watchFiles.serverJS),options:{jshintrc:!0}}},csslint:{options:{csslintrc:".csslintrc"},all:{src:watchFiles.clientCSS}},uglify:{production:{options:{mangle:!1},files:{"public/dist/application.min.js":"public/dist/application.js"}}},cssmin:{combine:{files:{"public/dist/application.min.css":watchFiles.clientCSS}}},nodemon:{dev:{script:"server.js",options:{nodeArgs:["--debug"],ext:"js,html",watch:watchFiles.serverViews.concat(watchFiles.serverJS)}}},"node-inspector":{custom:{options:{"web-port":1337,"web-host":"localhost","debug-port":5858,"save-live-edit":!0,"no-preload":!0,"stack-trace-limit":50,hidden:[]}}},ngmin:{production:{files:{"public/dist/application.js":[watchFiles.clientJS,watchFiles.serverJS]}}},concurrent:{"default":["nodemon","watch"],debug:["nodemon","watch","node-inspector"],options:{logConcurrentOutput:!0}},env:{test:{NODE_ENV:"test"}},mochaTest:{src:watchFiles.mochaTests,options:{reporter:"spec",require:"server.js"}},karma:{unit:{configFile:"karma.conf.js"}}}),require("load-grunt-tasks")(grunt),grunt.option("force",!0),grunt.task.registerTask("loadConfig","Task that loads the config into a grunt option.",function(){var config=(require("./config/init")(),require("./config/config"));grunt.config.set("applicationJavaScriptFiles",config.assets.js)}),grunt.registerTask("default",["concurrent:default"]),grunt.registerTask("debug",["concurrent:debug"]),grunt.registerTask("build",["less","loadConfig","ngmin","uglify","cssmin"]),grunt.registerTask("test",["env:test","mochaTest","karma:unit","less"])};var init=require("./config/init")(),config=require("./config/config"),mongoose=require("mongoose"),db=mongoose.connect(config.db,function(err){err&&(console.error("[31m","Could not connect to MongoDB!"),console.log(err))}),app=require("./config/express")(db);require("./config/passport")(),app.listen(config.port),exports=module.exports=app,console.log("MEAN.JS application started on port "+config.port);var _=require("lodash"),glob=require("glob");module.exports=_.extend(require("./env/all"),require("./env/"+process.env.NODE_ENV)||{}),module.exports.getGlobbedFiles=function(globPatterns,removeRoot){var _this=this,urlRegex=new RegExp("^(?:[a-z]+:)?//","i"),output=[];return _.isArray(globPatterns)?globPatterns.forEach(function(globPattern){output=_.union(output,_this.getGlobbedFiles(globPattern,removeRoot))}):_.isString(globPatterns)&&(urlRegex.test(globPatterns)?output.push(globPatterns):glob(globPatterns,{sync:!0},function(err,files){removeRoot&&(files=files.map(function(file){return file.replace(removeRoot,"")})),output=_.union(output,files)})),output},module.exports.getJavaScriptAssets=function(includeTests){var output=this.getGlobbedFiles(this.assets.lib.js.concat(this.assets.js),"public/");return includeTests&&(output=_.union(output,this.getGlobbedFiles(this.assets.tests))),output},module.exports.getCSSAssets=function(){var output=this.getGlobbedFiles(this.assets.lib.css.concat(this.assets.css),"public/");return output},module.exports={app:{title:"bloc3",description:"Full-Stack JavaScript with MongoDB, Express, AngularJS, and Node.js",keywords:"MongoDB, Express, AngularJS, Node.js"},port:process.env.PORT||3e3,templateEngine:"swig",sessionSecret:"MEAN",sessionCollection:"sessions",assets:{lib:{css:["public/lib/bootstrap/dist/css/bootstrap.css","public/lib/bootstrap/dist/css/bootstrap-theme.css"],js:["public/lib/angular/angular.js","public/lib/angular-resource/angular-resource.js","public/lib/angular-cookies/angular-cookies.js","public/lib/angular-animate/angular-animate.js","public/lib/angular-touch/angular-touch.js","public/lib/angular-sanitize/angular-sanitize.js","public/lib/angular-ui-router/release/angular-ui-router.js","public/lib/angular-ui-utils/ui-utils.js","public/lib/angular-bootstrap/ui-bootstrap-tpls.js","public/lib/lodash/dist/lodash.js"]},css:["public/modules/**/css/*.css"],js:["public/config.js","public/application.js","public/modules/*/*.js","public/modules/*/*[!tests]*/*.js"],tests:["public/lib/angular-mocks/angular-mocks.js","public/modules/*/tests/*.js"]}},module.exports={db:"mongodb://localhost/bloc3-dev",app:{title:"bloc3 - Development Environment"},facebook:{clientID:process.env.FACEBOOK_ID||"APP_ID",clientSecret:process.env.FACEBOOK_SECRET||"APP_SECRET",callbackURL:"http://localhost:3000/auth/facebook/callback"},twitter:{clientID:process.env.TWITTER_KEY||"CONSUMER_KEY",clientSecret:process.env.TWITTER_SECRET||"CONSUMER_SECRET",callbackURL:"http://localhost:3000/auth/twitter/callback"},google:{clientID:process.env.GOOGLE_ID||"APP_ID",clientSecret:process.env.GOOGLE_SECRET||"APP_SECRET",callbackURL:"http://localhost:3000/auth/google/callback"},linkedin:{clientID:process.env.LINKEDIN_ID||"APP_ID",clientSecret:process.env.LINKEDIN_SECRET||"APP_SECRET",callbackURL:"http://localhost:3000/auth/linkedin/callback"},github:{clientID:process.env.GITHUB_ID||"APP_ID",clientSecret:process.env.GITHUB_SECRET||"APP_SECRET",callbackURL:"http://localhost:3000/auth/github/callback"},mailer:{from:process.env.MAILER_FROM||"MAILER_FROM",options:{service:process.env.MAILER_SERVICE_PROVIDER||"MAILER_SERVICE_PROVIDER",auth:{user:process.env.MAILER_EMAIL_ID||"MAILER_EMAIL_ID",pass:process.env.MAILER_PASSWORD||"MAILER_PASSWORD"}}}};var MONGOHQ_URL="mongodb://"+process.env.MONGOHQ_UN+":"+process.env.MONGOHQ_PW+"@dogen.mongohq.com:10026/app31834364";module.exports={db:process.env.MONGOHQ_URL||process.env.MONGOLAB_URI||"mongodb://localhost/bloc3",assets:{lib:{css:["public/lib/bootstrap/dist/css/bootstrap.min.css","public/lib/bootstrap/dist/css/bootstrap-theme.min.css"],js:["public/lib/angular/angular.min.js","public/lib/angular-resource/angular-resource.js","public/lib/angular-cookies/angular-cookies.js","public/lib/angular-animate/angular-animate.js","public/lib/angular-touch/angular-touch.js","public/lib/angular-sanitize/angular-sanitize.js","public/lib/angular-ui-router/release/angular-ui-router.min.js","public/lib/angular-ui-utils/ui-utils.min.js","public/lib/angular-bootstrap/ui-bootstrap-tpls.min.js","public/lib/lodash/dist/lodash.min.js"]},css:"public/dist/application.min.css",js:"public/dist/application.min.js"},facebook:{clientID:process.env.FACEBOOK_ID||"APP_ID",clientSecret:process.env.FACEBOOK_SECRET||"APP_SECRET",callbackURL:"http://localhost:3000/auth/facebook/callback"},twitter:{clientID:process.env.TWITTER_KEY||"CONSUMER_KEY",clientSecret:process.env.TWITTER_SECRET||"CONSUMER_SECRET",callbackURL:"http://localhost:3000/auth/twitter/callback"},google:{clientID:process.env.GOOGLE_ID||"APP_ID",clientSecret:process.env.GOOGLE_SECRET||"APP_SECRET",callbackURL:"http://localhost:3000/auth/google/callback"},linkedin:{clientID:process.env.LINKEDIN_ID||"APP_ID",clientSecret:process.env.LINKEDIN_SECRET||"APP_SECRET",callbackURL:"http://localhost:3000/auth/linkedin/callback"},github:{clientID:process.env.GITHUB_ID||"APP_ID",clientSecret:process.env.GITHUB_SECRET||"APP_SECRET",callbackURL:"http://localhost:3000/auth/github/callback"},mailer:{from:process.env.MAILER_FROM||"MAILER_FROM",options:{service:process.env.MAILER_SERVICE_PROVIDER||"MAILER_SERVICE_PROVIDER",auth:{user:process.env.MAILER_EMAIL_ID||"MAILER_EMAIL_ID",pass:process.env.MAILER_PASSWORD||"MAILER_PASSWORD"}}}},module.exports={db:"mongodb://localhost/bloc3-test",port:3001,app:{title:"bloc3 - Test Environment"},facebook:{clientID:process.env.FACEBOOK_ID||"APP_ID",clientSecret:process.env.FACEBOOK_SECRET||"APP_SECRET",callbackURL:"http://localhost:3000/auth/facebook/callback"},twitter:{clientID:process.env.TWITTER_KEY||"CONSUMER_KEY",clientSecret:process.env.TWITTER_SECRET||"CONSUMER_SECRET",callbackURL:"http://localhost:3000/auth/twitter/callback"},google:{clientID:process.env.GOOGLE_ID||"APP_ID",clientSecret:process.env.GOOGLE_SECRET||"APP_SECRET",callbackURL:"http://localhost:3000/auth/google/callback"},linkedin:{clientID:process.env.LINKEDIN_ID||"APP_ID",clientSecret:process.env.LINKEDIN_SECRET||"APP_SECRET",callbackURL:"http://localhost:3000/auth/linkedin/callback"},github:{clientID:process.env.GITHUB_ID||"APP_ID",clientSecret:process.env.GITHUB_SECRET||"APP_SECRET",callbackURL:"http://localhost:3000/auth/github/callback"},mailer:{from:process.env.MAILER_FROM||"MAILER_FROM",options:{service:process.env.MAILER_SERVICE_PROVIDER||"MAILER_SERVICE_PROVIDER",auth:{user:process.env.MAILER_EMAIL_ID||"MAILER_EMAIL_ID",pass:process.env.MAILER_PASSWORD||"MAILER_PASSWORD"}}}};
var express=require("express"),morgan=require("morgan"),bodyParser=require("body-parser"),session=require("express-session"),compress=require("compression"),methodOverride=require("method-override"),cookieParser=require("cookie-parser"),helmet=require("helmet"),passport=require("passport"),mongoStore=require("connect-mongo")({session:session}),flash=require("connect-flash"),config=require("./config"),consolidate=require("consolidate"),path=require("path");module.exports=function(db){var app=express();return config.getGlobbedFiles("./app/models/**/*.js").forEach(function(modelPath){require(path.resolve(modelPath))}),app.locals.title=config.app.title,app.locals.description=config.app.description,app.locals.keywords=config.app.keywords,app.locals.facebookAppId=config.facebook.clientID,app.locals.jsFiles=config.getJavaScriptAssets(),app.locals.cssFiles=config.getCSSAssets(),app.use(function(req,res,next){res.locals.url=req.protocol+"://"+req.headers.host+req.url,next()}),app.use(compress({filter:function(req,res){return/json|text|javascript|css/.test(res.getHeader("Content-Type"))},level:9})),app.set("showStackError",!0),app.engine("server.view.html",consolidate[config.templateEngine]),app.set("view engine","server.view.html"),app.set("views","./app/views"),"development"===process.env.NODE_ENV?(app.use(morgan("dev")),app.set("view cache",!1)):"production"===process.env.NODE_ENV&&(app.locals.cache="memory"),app.use(bodyParser.urlencoded({extended:!0})),app.use(bodyParser.json()),app.use(methodOverride()),app.enable("jsonp callback"),app.use(cookieParser()),app.use(session({saveUninitialized:!0,resave:!0,secret:config.sessionSecret,store:new mongoStore({db:db.connection.db,collection:config.sessionCollection})})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(helmet.xframe()),app.use(helmet.xssFilter()),app.use(helmet.nosniff()),app.use(helmet.ienoopen()),app.disable("x-powered-by"),app.use(express.static(path.resolve("./public"))),config.getGlobbedFiles("./app/routes/**/*.js").forEach(function(routePath){require(path.resolve(routePath))(app)}),app.use(function(err,req,res,next){return err?(console.error(err.stack),void res.status(500).render("500",{error:err.stack})):next()}),app.use(function(req,res){res.status(404).render("404",{url:req.originalUrl,error:"Not Found"})}),app};var glob=require("glob");module.exports=function(){glob("./config/env/"+process.env.NODE_ENV+".js",{sync:!0},function(err,environmentFiles){console.log(),environmentFiles.length?console.log("[7m",'Application loaded using the "'+process.env.NODE_ENV+'" environment configuration'):(process.env.NODE_ENV?console.error("[31m",'No configuration file found for "'+process.env.NODE_ENV+'" environment using development instead'):console.error("[31m","NODE_ENV is not defined! Using default development environment"),process.env.NODE_ENV="development"),console.log("[0m")}),require.extensions[".server.controller.js"]=require.extensions[".js"],require.extensions[".server.model.js"]=require.extensions[".js"],require.extensions[".server.routes.js"]=require.extensions[".js"]};var passport=require("passport"),User=require("mongoose").model("User"),path=require("path"),config=require("./config");module.exports=function(){passport.serializeUser(function(user,done){done(null,user.id)}),passport.deserializeUser(function(id,done){User.findOne({_id:id},"-salt -password",function(err,user){done(err,user)})}),config.getGlobbedFiles("./config/strategies/**/*.js").forEach(function(strategy){require(path.resolve(strategy))()})};var passport=require("passport"),url=require("url"),FacebookStrategy=require("passport-facebook").Strategy,config=require("../config"),users=require("../../app/controllers/users");module.exports=function(){passport.use(new FacebookStrategy({clientID:config.facebook.clientID,clientSecret:config.facebook.clientSecret,callbackURL:config.facebook.callbackURL,passReqToCallback:!0},function(req,accessToken,refreshToken,profile,done){var providerData=profile._json;providerData.accessToken=accessToken,providerData.refreshToken=refreshToken;var providerUserProfile={firstName:profile.name.givenName,lastName:profile.name.familyName,displayName:profile.displayName,email:profile.emails[0].value,username:profile.username,provider:"facebook",providerIdentifierField:"id",providerData:providerData};users.saveOAuthUserProfile(req,providerUserProfile,done)}))};var passport=require("passport"),url=require("url"),GithubStrategy=require("passport-github").Strategy,config=require("../config"),users=require("../../app/controllers/users");module.exports=function(){passport.use(new GithubStrategy({clientID:config.github.clientID,clientSecret:config.github.clientSecret,callbackURL:config.github.callbackURL,passReqToCallback:!0},function(req,accessToken,refreshToken,profile,done){var providerData=profile._json;providerData.accessToken=accessToken,providerData.refreshToken=refreshToken;var providerUserProfile={displayName:profile.displayName,email:profile.emails[0].value,username:profile.username,provider:"github",providerIdentifierField:"id",providerData:providerData};users.saveOAuthUserProfile(req,providerUserProfile,done)}))};var passport=require("passport"),url=require("url"),GoogleStrategy=require("passport-google-oauth").OAuth2Strategy,config=require("../config"),users=require("../../app/controllers/users");module.exports=function(){passport.use(new GoogleStrategy({clientID:config.google.clientID,clientSecret:config.google.clientSecret,callbackURL:config.google.callbackURL,passReqToCallback:!0},function(req,accessToken,refreshToken,profile,done){var providerData=profile._json;providerData.accessToken=accessToken,providerData.refreshToken=refreshToken;var providerUserProfile={firstName:profile.name.givenName,lastName:profile.name.familyName,displayName:profile.displayName,email:profile.emails[0].value,username:profile.username,provider:"google",providerIdentifierField:"id",providerData:providerData};users.saveOAuthUserProfile(req,providerUserProfile,done)}))};var passport=require("passport"),url=require("url"),LinkedInStrategy=require("passport-linkedin").Strategy,config=require("../config"),users=require("../../app/controllers/users");module.exports=function(){passport.use(new LinkedInStrategy({consumerKey:config.linkedin.clientID,consumerSecret:config.linkedin.clientSecret,callbackURL:config.linkedin.callbackURL,passReqToCallback:!0,profileFields:["id","first-name","last-name","email-address"]},function(req,accessToken,refreshToken,profile,done){var providerData=profile._json;providerData.accessToken=accessToken,providerData.refreshToken=refreshToken;var providerUserProfile={firstName:profile.name.givenName,lastName:profile.name.familyName,displayName:profile.displayName,email:profile.emails[0].value,username:profile.username,provider:"linkedin",providerIdentifierField:"id",providerData:providerData};users.saveOAuthUserProfile(req,providerUserProfile,done)}))};var passport=require("passport"),LocalStrategy=require("passport-local").Strategy,User=require("mongoose").model("User");module.exports=function(){passport.use(new LocalStrategy({usernameField:"username",passwordField:"password"},function(username,password,done){User.findOne({username:username},function(err,user){return err?done(err):user?user.authenticate(password)?done(null,user):done(null,!1,{message:"Invalid password"}):done(null,!1,{message:"Unknown user"})})}))};var passport=require("passport"),User=require("mongoose").model("User"),url=require("url"),SpotifyStrategy=require("passport-spotify").Strategy,config=require("../config"),users=require("../../app/controllers/users");module.exports=function(){var appKey="4d0dce5db26c45048472d4770a5866f3",appSecret="ea3072d048bf4addb2b4f04763e2dd41";passport.use(new SpotifyStrategy({clientID:appKey,clientSecret:appSecret,callbackURL:"http://localhost:3000/auth/spotify/callback"},function(accessToken,refreshToken,profile,done){User.findOrCreate({spotifyId:profile.id},function(err,user){return done(err,user)})}))};var passport=require("passport"),url=require("url"),TwitterStrategy=require("passport-twitter").Strategy,config=require("../config"),users=require("../../app/controllers/users");module.exports=function(){passport.use(new TwitterStrategy({consumerKey:config.twitter.clientID,consumerSecret:config.twitter.clientSecret,callbackURL:config.twitter.callbackURL,passReqToCallback:!0},function(req,token,tokenSecret,profile,done){var providerData=profile._json;providerData.token=token,providerData.tokenSecret=tokenSecret;var providerUserProfile={displayName:profile.displayName,username:profile.username,provider:"twitter",providerIdentifierField:"id_str",providerData:providerData};users.saveOAuthUserProfile(req,providerUserProfile,done)}))};var mongoose=require("mongoose"),errorHandler=require("./errors"),Article=mongoose.model("Article"),_=require("lodash");exports.create=function(req,res){var article=new Article(req.body);article.user=req.user,article.save(function(err){return err?res.status(400).send({message:errorHandler.getErrorMessage(err)}):void res.jsonp(article)})},exports.read=function(req,res){res.jsonp(req.article)},exports.update=function(req,res){var article=req.article;article=_.extend(article,req.body),article.save(function(){res.jsonp(article)})},exports.delete=function(req,res){var article=req.article;article.remove(function(err){return err?res.status(400).send({message:errorHandler.getErrorMessage(err)}):void res.jsonp(article)})},exports.list=function(req,res){Article.find({user:req.user.id}).sort("-created").populate("user","displayName").exec(function(err,articles){return err?res.status(400).send({message:errorHandler.getErrorMessage(err)}):void res.jsonp(articles)})},exports.articleByID=function(req,res,next,id){Article.findById(id).populate("user","displayName").exec(function(err,article){return err?next(err):article?(req.article=article,void next()):next(new Error("Failed to load article "+id))})},exports.hasAuthorization=function(req,res,next){return req.article.user.id!==req.user.id?res.status(403).send({message:"User is not authorized"}):void next()},exports.tags=function(req,res){var cleanTags={};Article.aggregate([{$match:{user:new mongoose.Types.ObjectId(req.user.id)}},{$unwind:"$tags"},{$group:{_id:"$tags.text"}},{$sort:{_id:1}}]).exec(function(err,tags){if(err)return res.status(400).send({message:errorHandler.getErrorMessage(err)});for(var i=0;i<tags.length;i++)cleanTags[tags[i]._id]={original:tags[i]._id};res.jsonp(cleanTags)})},exports.updateTags=function(req,res){var newTag=req.body.newTag,oldTag=req.body.oldTag;console.log(req.body),Article.update({"tags.text":oldTag},{$set:{"tags.$.text":newTag}},{multi:!0},function(){exports.tags(req,res)})},exports.deleteTags=function(req,res){Article.update({"tags.text":req.params.tag},{$pull:{tags:{text:req.params.tag}}},{multi:!0},function(){exports.tags(req,res)})},exports.index=function(req,res){res.render("index",{user:req.user||null})};var getUniqueErrorMessage=function(err){var output;try{var fieldName=err.err.substring(err.err.lastIndexOf(".$")+2,err.err.lastIndexOf("_1"));output=fieldName.charAt(0).toUpperCase()+fieldName.slice(1)+" already exist"}catch(ex){output="Unique field already exist"}return output};exports.getErrorMessage=function(err){var message="";if(err.code)switch(err.code){case 11e3:case 11001:message=getUniqueErrorMessage(err);break;default:message="Something went wrong"}else for(var errName in err.errors)err.errors[errName].message&&(message=err.errors[errName].message);return message};var _=require("lodash");module.exports=_.extend(require("./users/users.authentication"),require("./users/users.authorization"),require("./users/users.password"),require("./users/users.profile"));var _=require("lodash"),errorHandler=require("../errors"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(req,res){delete req.body.roles;var user=new User(req.body);user.provider="local",user.displayName=user.firstName+" "+user.lastName,user.save(function(err){return err?res.status(400).send({message:errorHandler.getErrorMessage(err)}):(user.password=void 0,user.salt=void 0,req.login(user,function(err){err?res.status(400).send(err):res.jsonp(user)}),void 0)})},exports.signin=function(req,res,next){passport.authenticate("local",function(err,user,info){err||!user?res.status(400).send(info):(user.password=void 0,user.salt=void 0,req.login(user,function(err){err?res.status(400).send(err):res.jsonp(user)}))})(req,res,next)},exports.signout=function(req,res){req.logout(),res.redirect("/")},exports.oauthCallback=function(strategy){return function(req,res,next){passport.authenticate(strategy,function(err,user){return err||!user?res.redirect("/#!/signin"):void req.login(user,function(err){return res.redirect(err?"/#!/signin":"/#!/articles")})})(req,res,next)}},exports.saveOAuthUserProfile=function(req,providerUserProfile,done){if(req.user){var user=req.user;if(user.provider===providerUserProfile.provider||user.additionalProvidersData&&user.additionalProvidersData[providerUserProfile.provider])return done(new Error("User is already connected using this provider"),user);user.additionalProvidersData||(user.additionalProvidersData={}),user.additionalProvidersData[providerUserProfile.provider]=providerUserProfile.providerData,user.markModified("additionalProvidersData"),user.save(function(err){return done(err,user,"/#!/settings/accounts")})}else{var searchMainProviderIdentifierField="providerData."+providerUserProfile.providerIdentifierField,searchAdditionalProviderIdentifierField="additionalProvidersData."+providerUserProfile.provider+"."+providerUserProfile.providerIdentifierField,mainProviderSearchQuery={};mainProviderSearchQuery.provider=providerUserProfile.provider,mainProviderSearchQuery[searchMainProviderIdentifierField]=providerUserProfile.providerData[providerUserProfile.providerIdentifierField];var additionalProviderSearchQuery={};additionalProviderSearchQuery[searchAdditionalProviderIdentifierField]=providerUserProfile.providerData[providerUserProfile.providerIdentifierField];var searchQuery={$or:[mainProviderSearchQuery,additionalProviderSearchQuery]};User.findOne(searchQuery,function(err,user){if(err)return done(err);if(user)return done(err,user);var possibleUsername=providerUserProfile.username||(providerUserProfile.email?providerUserProfile.email.split("@")[0]:"");User.findUniqueUsername(possibleUsername,null,function(availableUsername){user=new User({firstName:providerUserProfile.firstName,lastName:providerUserProfile.lastName,username:availableUsername,displayName:providerUserProfile.displayName,email:providerUserProfile.email,provider:providerUserProfile.provider,providerData:providerUserProfile.providerData}),user.save(function(err){return done(err,user)})})})}},exports.removeOAuthProvider=function(req,res){var user=req.user,provider=req.param("provider");user&&provider&&(user.additionalProvidersData[provider]&&(delete user.additionalProvidersData[provider],user.markModified("additionalProvidersData")),user.save(function(err){return err?res.status(400).send({message:errorHandler.getErrorMessage(err)}):void req.login(user,function(err){err?res.status(400).send(err):res.jsonp(user)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(req,res,next,id){User.findOne({_id:id}).exec(function(err,user){return err?next(err):user?(req.profile=user,void next()):next(new Error("Failed to load User "+id))})},exports.requiresLogin=function(req,res,next){return req.isAuthenticated()?void next():res.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(roles){var _this=this;return function(req,res,next){_this.requiresLogin(req,res,function(){return _.intersection(req.user.roles,roles).length?next():res.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),crypto=require("crypto"),async=require("async"),crypto=require("crypto");exports.forgot=function(req,res,next){async.waterfall([function(done){crypto.randomBytes(20,function(err,buffer){var token=buffer.toString("hex");done(err,token)})},function(token,done){return req.body.username?void User.findOne({username:req.body.username},"-salt -password",function(err,user){return user?"local"!==user.provider?res.status(400).send({message:"It seems like you signed up using your "+user.provider+" account"}):(user.resetPasswordToken=token,user.resetPasswordExpires=Date.now()+36e5,user.save(function(err){done(err,token,user)}),void 0):res.status(400).send({message:"No account with that username has been found"})}):res.status(400).send({message:"Username field must not be blank"})},function(token,user,done){res.render("templates/reset-password-email",{name:user.displayName,appName:config.app.title,url:"http://"+req.headers.host+"/auth/reset/"+token},function(err,emailHTML){done(err,emailHTML,user)})},function(emailHTML,user,done){var smtpTransport=nodemailer.createTransport(config.mailer.options),mailOptions={to:user.email,from:config.mailer.from,subject:"Password Reset",html:emailHTML};smtpTransport.sendMail(mailOptions,function(err){err||res.send({message:"An email has been sent to "+user.email+" with further instructions."}),done(err)})}],function(err){return err?next(err):void 0})},exports.validateResetToken=function(req,res){User.findOne({resetPasswordToken:req.params.token,resetPasswordExpires:{$gt:Date.now()}},function(err,user){return user?void res.redirect("/#!/password/reset/"+req.params.token):res.redirect("/#!/password/reset/invalid")})},exports.reset=function(req,res,next){var passwordDetails=req.body;async.waterfall([function(done){User.findOne({resetPasswordToken:req.params.token,resetPasswordExpires:{$gt:Date.now()}},function(err,user){return err||!user?res.status(400).send({message:"Password reset token is invalid or has expired."}):passwordDetails.newPassword!==passwordDetails.verifyPassword?res.status(400).send({message:"Passwords do not match"}):(user.password=passwordDetails.newPassword,user.resetPasswordToken=void 0,user.resetPasswordExpires=void 0,user.save(function(err){return err?res.status(400).send({message:errorHandler.getErrorMessage(err)}):void req.login(user,function(err){err?res.status(400).send(err):(res.jsonp(user),done(err,user))})}),void 0)})},function(user,done){res.render("templates/reset-password-confirm-email",{name:user.displayName,appName:config.app.title},function(err,emailHTML){done(err,emailHTML,user)})},function(emailHTML,user,done){var smtpTransport=nodemailer.createTransport(config.mailer.options),mailOptions={to:user.email,from:config.mailer.from,subject:"Your password has been changed",html:emailHTML};smtpTransport.sendMail(mailOptions,function(err){done(err,"done")})}],function(err){return err?next(err):void 0})},exports.changePassword=function(req,res){var passwordDetails=req.body;req.user?passwordDetails.newPassword?User.findById(req.user.id,function(err,user){!err&&user?user.authenticate(passwordDetails.currentPassword)?passwordDetails.newPassword===passwordDetails.verifyPassword?(user.password=passwordDetails.newPassword,user.save(function(err){return err?res.status(400).send({message:errorHandler.getErrorMessage(err)}):void req.login(user,function(err){err?res.status(400).send(err):res.send({message:"Password changed successfully"})})})):res.status(400).send({message:"Passwords do not match"}):res.status(400).send({message:"Current password is incorrect"}):res.status(400).send({message:"User is not found"})}):res.status(400).send({message:"Please provide a new password"}):res.status(400).send({message:"User is not signed in"})};var _=require("lodash"),errorHandler=require("../errors"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(req,res){var user=req.user;delete req.body.roles,user?(user=_.extend(user,req.body),user.updated=Date.now(),user.displayName=user.firstName+" "+user.lastName,user.save(function(err){return err?res.status(400).send({message:errorHandler.getErrorMessage(err)}):void req.login(user,function(err){err?res.status(400).send(err):res.jsonp(user)})})):res.status(400).send({message:"User is not signed in"})},exports.me=function(req,res){res.jsonp(req.user||null)};var mongoose=require("mongoose"),Schema=mongoose.Schema,ArticleSchema=new Schema({created:{type:Date,"default":Date.now},title:{type:String,"default":"",trim:!0,required:"Title cannot be blank"},link:{type:String,"default":"",trim:!0},content:{type:String,"default":"",trim:!0},user:{type:Schema.ObjectId,ref:"User"},tags:{type:Schema.Types.Mixed}});mongoose.model("Article",ArticleSchema);var mongoose=require("mongoose"),Schema=mongoose.Schema,crypto=require("crypto"),validateLocalStrategyProperty=function(property){return"local"!==this.provider&&!this.updated||property.length},validateLocalStrategyPassword=function(password){return"local"!==this.provider||password&&password.length>6},UserSchema=new Schema({firstName:{type:String,trim:!0,"default":"",validate:[validateLocalStrategyProperty,"Please fill in your first name"]},lastName:{type:String,trim:!0,"default":"",validate:[validateLocalStrategyProperty,"Please fill in your last name"]},displayName:{type:String,trim:!0},email:{type:String,trim:!0,"default":"",validate:[validateLocalStrategyProperty,"Please fill in your email"],match:[/.+\@.+\..+/,"Please fill a valid email address"]},username:{type:String,unique:"testing error message",required:"Please fill in a username",trim:!0},password:{type:String,"default":"",validate:[validateLocalStrategyPassword,"Password should be longer"]},salt:{type:String},provider:{type:String,required:"Provider is required"},providerData:{},additionalProvidersData:{},roles:{type:[{type:String,"enum":["user","admin"]}],"default":["user"]},updated:{type:Date},created:{type:Date,"default":Date.now},resetPasswordToken:{type:String},resetPasswordExpires:{type:Date},spotifyId:{type:String}});UserSchema.pre("save",function(next){this.password&&this.password.length>6&&(this.salt=new Buffer(crypto.randomBytes(16).toString("base64"),"base64"),this.password=this.hashPassword(this.password)),next()}),UserSchema.methods.hashPassword=function(password){return this.salt&&password?crypto.pbkdf2Sync(password,this.salt,1e4,64).toString("base64"):password},UserSchema.methods.authenticate=function(password){return this.password===this.hashPassword(password)},UserSchema.statics.findUniqueUsername=function(username,suffix,callback){var _this=this,possibleUsername=username+(suffix||"");_this.findOne({username:possibleUsername},function(err,user){if(err)callback(null);else{if(user)return _this.findUniqueUsername(username,(suffix||0)+1,callback);callback(possibleUsername)}})},mongoose.model("User",UserSchema);var users=require("../../app/controllers/users"),articles=require("../../app/controllers/articles");module.exports=function(app){app.route("/articles").get(articles.list).post(users.requiresLogin,articles.create),app.route("/articles/:articleId").get(articles.read).put(users.requiresLogin,articles.hasAuthorization,articles.update).delete(users.requiresLogin,articles.hasAuthorization,articles.delete),app.route("/article_tags").get(articles.tags).post(articles.updateTags),app.route("/article_tags/:tag").delete(articles.deleteTags),app.param("articleId",articles.articleByID)},module.exports=function(app){var core=require("../../app/controllers/core");app.route("/").get(core.index)};var passport=require("passport");module.exports=function(app){var users=require("../../app/controllers/users");app.route("/users/me").get(users.me),app.route("/users").put(users.update),app.route("/users/accounts").delete(users.removeOAuthProvider),app.route("/users/password").post(users.changePassword),app.route("/auth/forgot").post(users.forgot),app.route("/auth/reset/:token").get(users.validateResetToken),app.route("/auth/reset/:token").post(users.reset),app.route("/auth/signup").post(users.signup),app.route("/auth/signin").post(users.signin),app.route("/auth/signout").get(users.signout),app.route("/auth/spotify").get(passport.authenticate("spotify")),app.route("/auth/spotify/callback").get(users.oauthCallback("spotify")),app.route("/auth/facebook").get(passport.authenticate("facebook",{scope:["email"]})),app.route("/auth/facebook/callback").get(users.oauthCallback("facebook")),app.route("/auth/twitter").get(passport.authenticate("twitter")),app.route("/auth/twitter/callback").get(users.oauthCallback("twitter")),app.route("/auth/google").get(passport.authenticate("google",{scope:["https://www.googleapis.com/auth/userinfo.profile","https://www.googleapis.com/auth/userinfo.email"]})),app.route("/auth/google/callback").get(users.oauthCallback("google")),app.route("/auth/linkedin").get(passport.authenticate("linkedin")),app.route("/auth/linkedin/callback").get(users.oauthCallback("linkedin")),app.route("/auth/github").get(passport.authenticate("github")),app.route("/auth/github/callback").get(users.oauthCallback("github")),app.param("userId",users.userByID)};var should=require("should"),mongoose=require("mongoose"),User=mongoose.model("User"),Article=mongoose.model("Article"),user,article;describe("Article Model Unit Tests:",function(){beforeEach(function(done){user=new User({firstName:"Full",lastName:"Name",displayName:"Full Name",email:"test@test.com",username:"username",password:"password"}),user.save(function(){article=new Article({title:"Article Title",content:"Article Content",user:user}),done()})}),describe("Method Save",function(){it("should be able to save without problems",function(done){return article.save(function(err){should.not.exist(err),done()})}),it("should be able to show an error when try to save without title",function(done){return article.title="",article.save(function(err){should.exist(err),done()})})}),afterEach(function(done){Article.remove().exec(),User.remove().exec(),done()})});var should=require("should"),mongoose=require("mongoose"),User=mongoose.model("User"),user,user2;describe("User Model Unit Tests:",function(){before(function(done){user=new User({firstName:"Full",lastName:"Name",displayName:"Full Name",email:"test@test.com",username:"username",password:"password",provider:"local"}),user2=new User({firstName:"Full",lastName:"Name",displayName:"Full Name",email:"test@test.com",username:"username",password:"password",provider:"local"}),done()}),describe("Method Save",function(){it("should begin with no users",function(done){User.find({},function(err,users){users.should.have.length(0),done()})}),it("should be able to save without problems",function(done){user.save(done)}),it("should fail to save an existing user again",function(done){return user.save(),user2.save(function(err){should.exist(err),done()})}),it("should be able to show an error when try to save without first name",function(done){return user.firstName="",user.save(function(err){should.exist(err),done()})})}),after(function(done){User.remove().exec(),done()})});